{"ast":null,"code":"var _jsxFileName = \"/Users/ssera/Desktop/ssera/frontend/src/components/admin/service/OneToOneList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OneToOneList = () => {\n  _s();\n  const [onetoone, setOnetoone] = useState([]);\n  const navigate = useNavigate();\n\n  // 서버에서 데이터를 가져오는 함수\n  const fetchOnetoone = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/onetoone');\n      console.log('API 응답 데이터:', response.data); // 데이터 구조 확인\n      setOnetoone(response.data); // 서버에서 받은 데이터를 onetoone에 저장\n    } catch (error) {\n      console.error('Error fetching onetoone:', error);\n    }\n  };\n  useEffect(() => {\n    fetchOnetoone(); // 처음에 데이터를 가져옴\n  }, []); // 빈 배열로 설정하여 컴포넌트가 처음 렌더링될 때만 실행\n\n  const handleDetailClick = id => {\n    navigate(`/admin/onetoone/${id}`); // 상세보기 페이지로 이동 (절대 경로)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"1:1 \\uBB38\\uC758 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(onetoone) && onetoone.length > 0 ? onetoone.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.post_title, \" - \", item.customer_id, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDetailClick(item.post_no),\n          children: \"\\uC0C1\\uC138\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, item.post_no, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBB38\\uC758 \\uBAA9\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(OneToOneList, \"uDw0hmj4ALhrTdwlReCS+BFDV00=\", false, function () {\n  return [useNavigate];\n});\n_c = OneToOneList;\nexport default OneToOneList;\nvar _c;\n$RefreshReg$(_c, \"OneToOneList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","OneToOneList","_s","onetoone","setOnetoone","navigate","fetchOnetoone","response","get","console","log","data","error","handleDetailClick","id","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","map","item","post_title","customer_id","onClick","post_no","_c","$RefreshReg$"],"sources":["/Users/ssera/Desktop/ssera/frontend/src/components/admin/service/OneToOneList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst OneToOneList = () => {\n  const [onetoone, setOnetoone] = useState([]);\n  const navigate = useNavigate();\n\n  // 서버에서 데이터를 가져오는 함수\n  const fetchOnetoone = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/onetoone');\n      console.log('API 응답 데이터:', response.data); // 데이터 구조 확인\n      setOnetoone(response.data); // 서버에서 받은 데이터를 onetoone에 저장\n    } catch (error) {\n      console.error('Error fetching onetoone:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchOnetoone(); // 처음에 데이터를 가져옴\n  }, []); // 빈 배열로 설정하여 컴포넌트가 처음 렌더링될 때만 실행\n\n  const handleDetailClick = (id) => {\n    navigate(`/admin/onetoone/${id}`); // 상세보기 페이지로 이동 (절대 경로)\n  };\n\n  return (\n    <div>\n      <h1>1:1 문의 목록</h1>\n      <ul>\n        {Array.isArray(onetoone) && onetoone.length > 0 ? (\n          onetoone.map((item) => (\n            <li key={item.post_no}>\n              {item.post_title} - {item.customer_id}\n              <button onClick={() => handleDetailClick(item.post_no)}>상세보기</button>\n            </li>\n          ))\n        ) : (\n          <p>문의 목록이 없습니다.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default OneToOneList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,gCAAgC,CAAC;MAClEC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC3CP,WAAW,CAACG,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMO,iBAAiB,GAAIC,EAAE,IAAK;IAChCT,QAAQ,CAAC,mBAAmBS,EAAE,EAAE,CAAC,CAAC,CAAC;EACrC,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA;MAAAe,QAAA,EACGK,KAAK,CAACC,OAAO,CAAClB,QAAQ,CAAC,IAAIA,QAAQ,CAACmB,MAAM,GAAG,CAAC,GAC7CnB,QAAQ,CAACoB,GAAG,CAAEC,IAAI,iBAChBxB,OAAA;QAAAe,QAAA,GACGS,IAAI,CAACC,UAAU,EAAC,KAAG,EAACD,IAAI,CAACE,WAAW,eACrC1B,OAAA;UAAQ2B,OAAO,EAAEA,CAAA,KAAMd,iBAAiB,CAACW,IAAI,CAACI,OAAO,CAAE;UAAAb,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF9DK,IAAI,CAACI,OAAO;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGjB,CACL,CAAC,gBAEFnB,OAAA;QAAAe,QAAA,EAAG;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACnB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxCID,YAAY;EAAA,QAECJ,WAAW;AAAA;AAAAgC,EAAA,GAFxB5B,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}